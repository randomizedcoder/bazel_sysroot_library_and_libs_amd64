{ lib, writeText }:

let
  # Generate the script that will create BUILD.bazel
  buildScript = ''
    #!/bin/sh
    set -e

    # Function to check if a path is a directory
    is_directory() {
      [ -d "$1" ]
    }

    # Function to generate rules for a file
    generate_rules() {
      local path="$1"
      local prefix="$2"
      local entry
      local name
      local sanitized_entry

      entry="$(basename "$path")"
      sanitized_entry="$(echo "$entry" | tr '/' '_' | tr '.' '_')"
      name="$prefix""_""$sanitized_entry"

      if is_directory "$path"; then
        local f
        for f in "$path"/*; do
          if [ -e "$f" ]; then
            generate_rules "$f" "$name"
          fi
        done
      elif echo "$entry" | grep -qE '\.(o|a|so)$'; then
        # For .o files, use objects
        if echo "$entry" | grep -q '\.o$'; then
          echo "cc_import("
          echo "  name = \"$name\","
          echo "  objects = [\"$path\"],"
          echo "  visibility = [\"//visibility:public\"],"
          echo ")"
          echo
        # For .a files, use static_library
        elif echo "$entry" | grep -q '\.a$'; then
          echo "cc_import("
          echo "  name = \"$name\","
          echo "  static_library = \"$path\","
          echo "  visibility = [\"//visibility:public\"],"
          echo ")"
          echo
        # For .so files, use shared_library
        elif echo "$entry" | grep -q '\.so$'; then
          echo "cc_import("
          echo "  name = \"$name\","
          echo "  shared_library = \"$path\","
          echo "  visibility = [\"//visibility:public\"],"
          echo ")"
          echo
        fi
      fi
    }

    # Start generating BUILD.bazel
    echo "# Auto-generated by Nix"
    echo
    echo "package(default_visibility = [\"//visibility:public\"])"
    echo
    echo "# Startup files (use objects, not static_library)"
    generate_rules "$1/lib" "lib"
    echo
    echo "# Usr directory filegroup"
    echo "filegroup("
    echo "  name = \"sysroot\","
    echo "  srcs = glob(["
    echo "    \"include/**\","
    echo "    \"lib/**\","
    echo "  ]),"
    echo ")"
    echo
    echo "# Include directory filegroup"
    echo "filegroup("
    echo "  name = \"include\","
    echo "  srcs = glob([\"include/**\"]),"
    echo ")"
    echo
    echo "# Library directory filegroup"
    echo "filegroup("
    echo "  name = \"lib\","
    echo "  srcs = glob([\"lib/**\"]),"
    echo ")"
    echo
    echo "# end"
  '';
in
writeText "generate-build-bazel.sh" buildScript