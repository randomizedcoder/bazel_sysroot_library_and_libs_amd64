#
# BUILD.bazel
#

package(default_visibility = ["//visibility:public"])

# Startup files
cc_library(
    name = "crt1",
    srcs = ["lib/Scrt1.o"],
)

cc_library(
    name = "crti",
    srcs = ["lib/crti.o"],
)

cc_library(
    name = "crtbegin",
    srcs = ["lib/gcc/x86_64-unknown-linux-gnu/14.2.1/crtbeginS.o"],
)

cc_library(
    name = "crtend",
    srcs = ["lib/gcc/x86_64-unknown-linux-gnu/14.2.1/crtendS.o"],
)

cc_library(
    name = "crtn",
    srcs = ["lib/crtn.o"],
)

# Core C/C++ libraries
cc_library(
    name = "libc",
    srcs = ["lib/libc.a"],
)

cc_library(
    name = "libstdc++",
    srcs = ["lib/libstdc++.a"],
)

cc_library(
    name = "libgcc",
    srcs = ["lib/gcc/x86_64-unknown-linux-gnu/14.2.1/libgcc.a"],
)

cc_library(
    name = "libgcc_s",
    srcs = ["lib/libgcc_s.so"],
)

cc_library(
    name = "libm",
    srcs = ["lib/libm.a"],
)

cc_library(
    name = "libpthread",
    srcs = ["lib/libpthread.a"],
)

cc_library(
    name = "libdl",
    srcs = ["lib/libdl.a"],
)

cc_library(
    name = "librt",
    srcs = ["lib/librt.a"],
)

cc_library(
    name = "libutil",
    srcs = ["lib/libutil.a"],
)

cc_library(
    name = "libresolv",
    srcs = ["lib/libresolv.a"],
)

cc_library(
    name = "libanl",
    srcs = ["lib/libanl.a"],
)

# Compression libraries
cc_library(
    name = "libz",
    srcs = ["lib/libz.a"],
)

# XML and parsing
cc_library(
    name = "libxml2",
    srcs = ["lib/libxml2.so"],
)

cc_library(
    name = "libexpat",
    srcs = ["lib/libexpat.so"],
)

# Networking
cc_library(
    name = "libssl",
    srcs = ["lib/libssl.so"],
)

cc_library(
    name = "libcrypto",
    srcs = ["lib/libcrypto.so"],
)

cc_library(
    name = "libcurl",
    srcs = ["lib/libcurl.so"],
)

# Text processing
cc_library(
    name = "libpcre",
    srcs = ["lib/libpcre.so"],
)

cc_library(
    name = "libpcre2-8",
    srcs = ["lib/libpcre2-8.so"],
)

cc_library(
    name = "libpcre2-16",
    srcs = ["lib/libpcre2-16.so"],
)

cc_library(
    name = "libpcre2-32",
    srcs = ["lib/libpcre2-32.so"],
)

cc_library(
    name = "libpcre2-posix",
    srcs = ["lib/libpcre2-posix.so"],
)

# JSON
cc_library(
    name = "libjansson",
    srcs = ["lib/libjansson.so"],
)

# Database
cc_library(
    name = "libsqlite3",
    srcs = ["lib/libsqlite3.so"],
)

# Image processing
cc_library(
    name = "libpng",
    srcs = ["lib/libpng16.so"],
)

cc_library(
    name = "libjpeg",
    srcs = ["lib/libjpeg.so"],
)

# Sanitizer libraries
cc_library(
    name = "libasan",
    srcs = ["lib/libasan.so"],
)

cc_library(
    name = "libtsan",
    srcs = ["lib/libtsan.so"],
)

cc_library(
    name = "libubsan",
    srcs = ["lib/libubsan.so"],
)

cc_library(
    name = "liblsan",
    srcs = ["lib/liblsan.so"],
)

cc_library(
    name = "libhwasan",
    srcs = ["lib/libhwasan.so"],
)

# Other libraries
cc_library(
    name = "libquadmath",
    srcs = ["lib/libquadmath.so"],
)

cc_library(
    name = "libatomic",
    srcs = ["lib/libatomic.so"],
)

cc_library(
    name = "libitm",
    srcs = ["lib/libitm.so"],
)

cc_library(
    name = "libssp",
    srcs = ["lib/libssp.so"],
)

cc_library(
    name = "libgomp",
    srcs = ["lib/libgomp.so"],
)

# Usr directory filegroup
filegroup(
    name = "sysroot",
    srcs = glob([
        "include/**",
        "lib/**",
    ]),
)

# Include directory filegroup
filegroup(
    name = "include",
    srcs = glob(["include/**"]),
)

# Library directory filegroup
filegroup(
    name = "lib",
    srcs = glob(["lib/**"]),
)

# end